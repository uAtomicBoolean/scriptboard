import { Theme, LightThemes, DarkThemes } from "themes.slint";
import { Palette } from "std-widgets.slint";

export global UAppTheme {
    property <Theme> theme: Palette.color-scheme == ColorScheme.dark ? DarkThemes.default : LightThemes.default;

	// Primary color.
	in-out property <color> primary: theme.primary;
    in-out property <color> primary-hover: theme.primary-hover;
    in-out property <color> primary-active: theme.primary-active;
    in-out property <color> primary-disabled: theme.primary-disabled;
    in-out property <color> primary-selected: theme.primary-selected;

	// Success color.
	in-out property <color> success: theme.success;
    in-out property <color> success-hover: theme.success-hover;
    in-out property <color> success-active: theme.success-active;
    in-out property <color> success-disabled: theme.success-disabled;
    in-out property <color> success-selected: theme.success-selected;

	// Warning color.
	in-out property <color> warning: theme.warning;
    in-out property <color> warning-hover: theme.warning-hover;
    in-out property <color> warning-active: theme.warning-active;
    in-out property <color> warning-disabled: theme.warning-disabled;
    in-out property <color> warning-selected: theme.warning-selected;

	// Danger color.
	in-out property <color> danger: theme.danger;
    in-out property <color> danger-hover: theme.danger-hover;
    in-out property <color> danger-active: theme.danger-active;
    in-out property <color> danger-disabled: theme.danger-disabled;
    in-out property <color> danger-selected: theme.danger-selected;

	// Background color
	in-out property <color> bg-container: theme.bg-container;
    in-out property <color> bg-elevated: theme.bg-elevated;
    in-out property <color> bg-layout: theme.bg-layout;

	// Color fill
	in-out property <color> color-fill-plus: theme.color-fill-plus;
    in-out property <color> color-fill: theme.color-fill;
    in-out property <color> color-fill-secondary: theme.color-fill-secondary;
    in-out property <color> color-fill-tertiary: theme.color-fill-tertiary;
    in-out property <color> color-fill-quaternary: theme.color-fill-quaternary;

	// Font/Text
	in-out property <length> default-font-size: theme.default-font-size;
    in-out property <color> inverse-text: theme.inverse-text;
    in-out property <color> text: theme.text;
    in-out property <color> text-secondary: theme.text-secondary;
    in-out property <color> text-heading: theme.text-heading;
    in-out property <color> text-disabled: theme.text-disabled;

	// Borders
    in-out property <color> border: theme.border;
    in-out property <color> border-secondary: theme.border-secondary;
    in-out property <color> separator: theme.separator;

	// Icons
	in-out property <length> default-icon-size: theme.default-icon-size;

	// Default padding
    in-out property <length> padding-vertical: theme.padding-vertical;
    in-out property <length> padding-horizontal: theme.padding-horizontal;

	// Radius
	in-out property <length> default-radius: theme.default-radius;
    in-out property <length> radius-small: theme.radius-small;
    in-out property <length> radius-base: theme.radius-base;
    in-out property <length> radius-large: theme.radius-large;
    in-out property <length> radius-round: theme.radius-round;
    in-out property <length> radius-circle: theme.radius-circle;
}
