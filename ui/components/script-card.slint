import { UAppTheme } from "@sleek-ui/app-theme.slint";
import { ButtonInterface } from "@sleek-ui/utils/button-interface.slint";
import { UCard, UCenter, UIconButton, USpinner, UText, UTitle, UButton } from "@sleek-ui/widgets.slint";


export component ScriptCard {
    in-out property <string> name: "Placeholder";
	// TODO replace with transparent color once #23 is implemented.
    in-out property <color> chip-color: UAppTheme.primary;
    in-out property <string> description: "This is a placeholder for the real script's description.";
    in-out property <bool> script-running: false;
    property <bool> card-is-hovered: false;
    callback execute-script();
    callback open-output <=> btn-output.clicked;
    callback open-settings <=> btn-settings.clicked;
    width: 300px * UAppTheme.scale-factor;
    height: 150px * UAppTheme.scale-factor;
	// Used to contain the inner card which allow us to apply custom animations
	// without creating errors when updating the x and y properties in layouts.
	Rectangle {
        ButtonInterface {
            border-radius: UAppTheme.radius-large;
            border-color: UAppTheme.border;
            border-width: UAppTheme.border-width-base;
            background: UAppTheme.bg-container;
            clicked => {
                execute-script();
            }
            VerticalLayout {
                padding: UAppTheme.padding-big;
                HorizontalLayout {
                    spacing: UAppTheme.spacing-big;
                    padding-bottom: UAppTheme.padding-base;
                    VerticalLayout {
                        alignment: center;
                        Rectangle {
                            border-radius: UAppTheme.radius-circle;
                            background: chip-color;
                            width: 10px * UAppTheme.scale-factor;
                            height: 10px * UAppTheme.scale-factor;
                        }
                    }

                    UTitle {
                        text: name;
                        level: 6;
                        font-weight: 600;
                    }
                }

                UText {
                    vertical-stretch: 1;
                    text: description;
                }

                HorizontalLayout {
                    spacing: UAppTheme.spacing-medium;
                    btn-exec := UButton {
                        horizontal-stretch: 1;
                        variant: primary;
                        loading: script-running;
                        text: @tr("Execute");
                        icon: @image-url("../assets/icons/play.svg");
                        icon-placement: start;
                        t-content-spacing: UAppTheme.spacing-big;
                        clicked => {
                            execute-script();
                        }
                    }

                    btn-output := UIconButton {
                        t-padding-horizontal: 6px * UAppTheme.scale-factor;
                        icon: @image-url("../assets/icons/terminal.svg");
                        border-radius: UAppTheme.radius-base;
                        accessible-label: @tr("Open script's output.");
                    }

                    btn-settings := UIconButton {
                        t-padding-horizontal: 6px * UAppTheme.scale-factor;
                        icon: @image-url("../assets/icons/settings.svg");
                        border-radius: UAppTheme.radius-base;
                        accessible-label: @tr("Open script's settings.");
                    }
                }
            }

            animate x, y, drop-shadow-blur { duration: 150ms; }
            states [
                hover when self.has-hover || btn-exec.has-hover || btn-output.has-hover || btn-settings.has-hover: {
                    y: -3px * UAppTheme.scale-factor;
                    drop-shadow-blur: UAppTheme.shadow-blur;
                    drop-shadow-color: UAppTheme.shadow-color;
                    drop-shadow-offset-x: 3px * UAppTheme.scale-factor;
                    drop-shadow-offset-y: UAppTheme.shadow-y-offset;
                }
            ]
        }
    }
}
